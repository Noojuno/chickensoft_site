"use strict";(self.webpackChunkchickensoft_site=self.webpackChunkchickensoft_site||[]).push([[4271],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),k=s(n),m=i,u=k["".concat(l,".").concat(m)]||k[m]||g[m]||c;return n?o.createElement(u,r(r({ref:t},p),{},{components:n})):o.createElement(u,r({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,r=new Array(c);r[0]=k;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,r[1]=a;for(var s=2;s<c;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>c,metadata:()=>a,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const c={title:"\ud83d\udca1 Testing Logic Blocks",image:"../header.jpg"},r=void 0,a={unversionedId:"logic_blocks/testing/testing_logic_blocks",id:"logic_blocks/testing/testing_logic_blocks",title:"\ud83d\udca1 Testing Logic Blocks",description:"LogicBlocks are mockable and testable.",source:"@site/docs/logic_blocks/06_testing/01_testing_logic_blocks.md",sourceDirName:"logic_blocks/06_testing",slug:"/logic_blocks/testing/testing_logic_blocks",permalink:"/docs/logic_blocks/testing/testing_logic_blocks",draft:!1,editUrl:"https://github.com/chickensoft-games/chickensoft_site/tree/main/docs/logic_blocks/06_testing/01_testing_logic_blocks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\ud83d\udca1 Testing Logic Blocks",image:"../header.jpg"},sidebar:"tutorialSidebar",previous:{title:"\ud83e\uddea Testing",permalink:"/docs/logic_blocks/testing/"},next:{title:"\ud83d\udd04 Testing States",permalink:"/docs/logic_blocks/testing/testing_states"}},l={},s=[{value:"\ud83e\udd78 Mocking a Logic Block",id:"-mocking-a-logic-block",level:3},{value:"\ud83d\udd2c Testing a Logic Block",id:"-testing-a-logic-block",level:3}],p={toc:s};function g(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"LogicBlocks are mockable and testable."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can see plenty of test examples for the tutorial project in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Chickensoft.LogicBlocks.Tutorial")," package at the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/chickensoft-games/LogicBlocks"},"LogicBlocks")," repository.")),(0,i.kt)("h3",{id:"-mocking-a-logic-block"},"\ud83e\udd78 Mocking a Logic Block"),(0,i.kt)("p",null,"LogicBlocks implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"ILogicBlock<TState>")," interface, which makes them easy to mock."),(0,i.kt)("p",null,"To make a logic block easily mockable, simply make it implement an interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface ITimer : ILogicBlock<Timer.State>;\n\n[Meta, LogicBlock(typeof(State), Diagram = true)]\npublic partial class Timer : LogicBlock<Timer.State>, ITimer {\n  public override Transition GetInitialState() => To<State.PoweredOff>();\n\n  ...\n}\n")),(0,i.kt)("p",null,"Then, we can mock whatever logic block api's we need to when testing an object which uses a logic block."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using static Chickensoft.LogicBlocks.Tutorial.Timer;\n\nsealed record MyComponent(ITimer Timer) {\n  public void DoSomething() {\n    if (Timer.Value is State.PoweredOff) {\n      // Do something when the timer is off.\n    }\n  }\n}\n\npublic class MyComponentTest {\n  [Fact]\n  public void Mocks() {\n    var timer = new Mock<ITimer>();\n\n    // Make the mock logic block be in a specific state.\n    timer.Setup(t => t.Value).Returns(new State.PoweredOff());\n\n    var component = new MyComponent(timer.Object);\n    component.DoSomething();\n  }\n}\n")),(0,i.kt)("h3",{id:"-testing-a-logic-block"},"\ud83d\udd2c Testing a Logic Block"),(0,i.kt)("p",null,"Logic blocks themselves don't usually have much to test, but you can still do it for the sake of completeness."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"[Fact]\npublic void Initializes() {\n  // Mock dependencies that the logic block needs.\n  var clock = new Mock<IClock>();\n\n  // Create the real logic block.\n  var timer = new Timer();\n\n  // Add the mocked dependencies to the blackboard.\n  timer.Set(clock.Object);\n\n  // Check that the initial state is the one we expect.\n  var state = timer.GetInitialState()\n    .State\n    .ShouldBeOfType<State.PoweredOff>();\n\n  // Verify the timer has set its blackboard data correctly.\n  timer.Has<Data>().ShouldBeTrue();\n  timer.Get<IClock>().ShouldBe(clock.Object);\n}\n")))}g.isMDXComponent=!0}}]);
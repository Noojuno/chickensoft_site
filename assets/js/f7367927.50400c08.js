"use strict";(self.webpackChunkchickensoft_site=self.webpackChunkchickensoft_site||[]).push([[238],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7977:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={title:"\ud83e\uddec Advanced Usage",sidebar_position:3,image:"/docs/super_nodes/header.jpg"},i=void 0,p={unversionedId:"super_nodes/advanced_usage/index",id:"super_nodes/advanced_usage/index",title:"\ud83e\uddec Advanced Usage",description:"In the first section, we explained the basics of PowerUps and how to apply them to SuperNodes.",source:"@site/docs/super_nodes/advanced_usage/index.md",sourceDirName:"super_nodes/advanced_usage",slug:"/super_nodes/advanced_usage/",permalink:"/docs/super_nodes/advanced_usage/",draft:!1,editUrl:"https://github.com/chickensoft-games/chickensoft_site/tree/main/docs/super_nodes/advanced_usage/index.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\ud83e\uddec Advanced Usage",sidebar_position:3,image:"/docs/super_nodes/header.jpg"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd75\ufe0f Static Reflection",permalink:"/docs/super_nodes/static_reflection"},next:{title:"\ud83d\udd0b PowerUps & Interfaces",permalink:"/docs/super_nodes/advanced_usage/implementing_interfaces"}},s={},l=[{value:"\ud83e\uddf0 When to Use PowerUps",id:"-when-to-use-powerups",level:2},{value:"\ud83e\udea2 PowerUp Constraints",id:"-powerup-constraints",level:2},{value:"\ud83d\udc8e Naming Conflicts",id:"-naming-conflicts",level:2}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In the ",(0,r.kt)("a",{parentName:"p",href:"../"},"first section"),", we explained the basics of PowerUps and how to apply them to SuperNodes."),(0,r.kt)("p",null,"PowerUps have a number of features that allow you to enhance a node script in a way that would have only been possible previously with a source generator. PowerUps are, in a sense, a lightweight static ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Metaprogramming"},"metaprogramming")," tool."),(0,r.kt)("h2",{id:"-when-to-use-powerups"},"\ud83e\uddf0 When to Use PowerUps"),(0,r.kt)("p",null,"Adding code freely to node scripts is big hammer to swing, so we recommend reserving PowerUps for systems that may apply across a large number of scripts. Things like serialization, dependency injection, logging, analytics, or integration with other components are all good candidates for PowerUps."),(0,r.kt)("p",null,"If you go crazy using PowerUps for game logic, you'll end up with a lot of generated code that's hard to read and debug. If you aren't sure if you should make something into a PowerUp, feel free to hop on over to the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/gSjaPgMmYW"},"Chickensoft Discord")," and ask for advice."),(0,r.kt)("h2",{id:"-powerup-constraints"},"\ud83e\udea2 PowerUp Constraints"),(0,r.kt)("p",null,"PowerUps can constrain the type of SuperNodes that they can be applied to by extending the least specific type that they can be applied to."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Extending a base class in a PowerUp ",(0,r.kt)("em",{parentName:"p"},"constrains")," the usage of the PowerUp to SuperNodes that are subclasses (or subtypes) of the extended class.")),(0,r.kt)("p",null,"For example, if you want a PowerUp to be able to be applied to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Node2D")," (or any of its descendants), you can extend ",(0,r.kt)("inlineCode",{parentName:"p"},"Node2D")," in your PowerUp class. SuperNodes that don't extend ",(0,r.kt)("inlineCode",{parentName:"p"},"Node2D")," or any of its descendants will get a compile-time error if they try to apply the PowerUp."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace PowerUpConstraints;\n\nusing Godot;\nusing SuperNodes.Types;\n\n[SuperNode(typeof(MyPowerUp))]\npublic partial class MySuperNode : Node3D {\n  public override partial void _Notification(int what);\n}\n\n[PowerUp]\npublic partial class MyPowerUp : Node2D { }\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"Node3D")," is not an ancestor of ",(0,r.kt)("inlineCode",{parentName:"p"},"Node2D"),", trying to build the code above results in a ",(0,r.kt)("inlineCode",{parentName:"p"},"SUPER_NODE_INVALID_POWER_UP")," error.")),(0,r.kt)("h2",{id:"-naming-conflicts"},"\ud83d\udc8e Naming Conflicts"),(0,r.kt)("p",null,"If you apply two PowerUps to a node that both declare the same member, you will get a compile time error."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"[SuperNode(typeof(PowerUpA), typeof(PowerUpB))]\npublic partial class MySuperNode : Node {\n  public override partial void _Notification(int what);\n  // ...\n}\n\n[PowerUp]\npublic partial class PowerUpA : Node {\n  public string MyName { get; set; } = nameof(PowerUpA);\n}\n\n[PowerUp]\npublic partial class PowerUpB : Node {\n  public string MyName { get; set; } = nameof(PowerUpB);\n}\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The example above results in the following compiler error:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-md"},"The type 'ExampleNode' already contains a definition for 'MyName'\n"))),(0,r.kt)("p",null,'The clever reader may recognize this as the classic "diamond problem" from ',(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Multiple_inheritance"},"multiple inheritance"),"."),(0,r.kt)("p",null,"Fortunately, you can leverage C#'s ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/interfaces/explicit-interface-implementation"},"explicit interface implementation syntax")," to resolve naming conflicts between PowerUps."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace NamingConflictWorkaround;\n\nusing Godot;\nusing SuperNodes.Types;\n\n[SuperNode(typeof(PowerUpA), typeof(PowerUpB))]\npublic partial class MySuperNode : Node {\n  public override partial void _Notification(int what);\n}\n\npublic interface IPowerUpA {\n  string MyName { get; }\n}\n\n[PowerUp]\npublic class PowerUpA : IPowerUpA {\n  string IPowerUpA.MyName { get; } = nameof(PowerUpA);\n}\n\npublic interface IPowerUpB {\n  string MyName { get; }\n}\n\n[PowerUp]\npublic class PowerUpB : IPowerUpB {\n  string IPowerUpB.MyName { get; } = nameof(PowerUpB);\n}\n")),(0,r.kt)("p",null,"In the next few sections, we'll explain more of the advanced capabilities of PowerUps, as well as provide information on how to take advantage of them in your project."))}d.isMDXComponent=!0}}]);